# conflicting html tag name with namespace name
load time as my_time
load web.html import html
load config import configuration
load translations import translation
load lib import lib
load html_common import html_content

namespace iar { visitor_media }

routine visitor_media(
    invar iar_name: string,
    invar path: string,
    invar trans: Locale,
    invar dst: string,
    invar pages: map<string, string>,
    invar groups: IarGroup) => none {
  html5 = io.open(path, 'w')
  defer { html5.close() }

  # just convenient shortcuts
  invar cu = conf.uri
  invar ci = conf.img
  invar t = translations[trans]

  rel = routine(invar target: string) { mkrel(dst, target) }

  # FIXME it should be somehow allowed to run fragment{} from document{}
  _html_top_stripe = html_top_stripe(groups, iar_name, trans, dst, pages)
  _html_footer = html_footer(trans, dst)

  html5.write(document {
    html_head(trans, dst, pages)

    body {
      text(_html_top_stripe)

#      if (%feedback) {
        div(id='feedback') {
          h3(_class='section') { t['feedback'] }

          for (piece in feedback) {
            paragraph(_class='feedback_msg narrow_paragraph') { piece.msg }
            if (piece.author != none)
              paragraph(_class='feedback_author narrow_paragraph') { piece.author }
          }
        }
#      }

      div {
        h3(_class='section') { t['gallery'] }

        if (my_time.time.now() >= conf.time_from) {
          # FIXME
          paragraph {
            anchor(href='http://www.root.cz/galerie/openalt-2014-sobota/') {
              'root.cz/galerie/openalt-2014-sobota/'
            }
          }
          paragraph {
            anchor(href='http://www.root.cz/galerie/openalt-2014-nedele/') {
              'root.cz/galerie/openalt-2014-nedele/'
            }
          }
        }
        else {
          #paragraph { t['gallery_empty'] }
        }
      }

#      div {
#        h3(_class='section') { t['propagation'] }
#        paragraph(_class='narrow_paragraph') { t['propagation_hint_oa_conf'] }
#        div(_class='propagation') {
#          #anchor(href=cu.banner_print) {
#          #  img(_class='img_example', src=rel(ci.banner_print),
#          #      alt=rel(ci.banner_print), title=cu.banner_print)
#          #}
#          anchor(href=cu.logo_oa_conf) {
#            img(_class='img_example', src=rel(ci.logo_oa_conf),
#                alt=rel(ci.logo_oa_conf), title=cu.logo_oa_conf)
#          }
#          #anchor(href=cu.banner_web) {
#          #  img(_class='img_example', src=rel(ci.banner_web),
#          #      alt=rel(ci.banner_web), title=cu.banner_web)
#          #}
#          #anchor(href=cu.qr_oa_conf) {
#          #  img(_class='img_example', src=rel(ci.qr_oa_conf),
#          #      alt=rel(ci.qr_oa_conf), title=cu.qr_oa_conf)
#          #}
#          anchor(href=cu.graph_man_oa_conf) {
#            img(_class='img_example', src=rel(ci.graph_man_oa_conf),
#                alt=rel(ci.graph_man_oa_conf), title=cu.graph_man_oa_conf)
#          }
#        }
#      }

      text(_html_footer)
    }
  })
}
