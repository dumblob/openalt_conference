# conflicting html tag name with namespace name
load time as my_time
load web.html import html
load config import configuration
load translations import translation
load lib import lib
load html_common import html_content

namespace iar { speaker_info }

routine speaker_info(
    invar iar_name: string,
    invar path: string,
    invar trans: Locale,
    invar dst: string,
    invar pages: map<string, string>,
    invar groups: IarGroup) => none {
  html5 = io.open(path, 'w')
  defer { html5.close() }

  # just convenient shortcuts
  invar cu = conf.uri
  invar ci = conf.img
  invar t = translations[trans]

  rel = routine(invar target: string) { mkrel(dst, target) }
  rel2 = routine(invar ref: LocalRefs) => string {
    tup = html_local_refs[ref]
    return mkrel(dst, dst + '/' + pages[tup[0]]) +
      (%tup[1] ? '#' + tup[1] : '')
  }

  # FIXME html module should somehow allow (temporary) nested subdocuments
  #   creation or transitive code section calls through functions
  #   i.e. basically running fragment{} from document{}
  _html_top_stripe = html_top_stripe(groups, iar_name, trans, dst, pages)
  _html_footer = html_footer(trans, dst)

  html5.write(document {
    html_head(trans, dst, pages)

    body {
      text(_html_top_stripe)

      div {
        h3(_class='section') { 'Informace pro přednášející' }
        div(_class='narrow_paragraph') { t['speaker_info'] }
      }

      text(_html_footer)
    }
  })
}
