# FIXME change the tree model to relational SQL-like model - see
#   http://code.activestate.com/recipes/159974-sql-like-set-operations-with-list-comprehension-on/

load config import configuration . { conf }
load lib import lib
load time import time
namespace participants_ns { participants }

_participants: list<Participant> = {
  ('',
  members = none,
  conf.resdir / 'img/participants/openalt_z_s.jpg',
  conf.uri.oa_org,
  '',
  conf.uri.fb,
  conf.uri.diaspora,
  conf.uri.twitter,
  conf.uri.gplus,
  trans = {
    $en -> ('', '', '',),
    $cs -> ('', '', '',),
  },
  events = {
    # lunch - saturday
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'D105',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'D105',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'D0206',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'D0206',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'D0207',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'D0207',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'A112',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'A112',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'A113',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'A113',),
#    }),
#
#    # lunch - sunday
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'D105',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'D105',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'D0206',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'D0206',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'D0207',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'D0207',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'A112',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'A112',),
#    }),
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 11, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 13, 00),
#    0,
#    trans = {
#      $en -> ('Pause for lunch', 'no reqs', 'desc', 'A113',),
#      $cs -> ('Přestávka na oběd', 'žádné pož.', 'popis', 'A113',),
#    }),

#    # FIXME testing party
#   ($party,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 13, 30),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day -1, 23, 59),
#    0,
#    trans = {
#      $en -> ('Siesta after lunch', 'requirements', 'description', 'venue',),
#      $cs -> ('Siesta po obědě', 'Dobrou náladu a vhodnou pohovku.', 'Chvilka na odpočinek...', 'vestibul pavilonu D',),
#    }),
#
#    # party
#   ($party,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 14, 00),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 22, 00),
#    0,
#    trans = {
#      $en -> ('Party', 'no reqs', 'Please see the leaflets for further information.', 'Industra, 1. floor',),
#      $cs -> ('Párty', 'žádné pož.', 'Vizte letáky pro podrobnější informace.', 'Industra, 1. partro',),
#    }),
#
#    # lottery
#   ($internal,
#    $track0,
#    uri = ('', '', ''),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 16, 00),
#    time.make(conf.time_to.year, conf.time_to.month, conf.time_to.day, 17, 00),
#    0,
#    trans = {
#      $en -> ('Final lottery', 'Having filled the feedback form.', 'For those who filled the feedback forms there are valuable prices (RHEL certification exam, T-Shirts, cups etc.).', 'D105',),
#      $cs -> ('Závěrečné slosování', 'Vyplnění formuláře pro zpětnou vazbu.', 'Pro ty, kteří vyplnili formulář zpětné vazby jsou připraveny hodnotné ceny (RHEL certifikační zkouška, třička, hrníčky atd.)', 'D105',),
#    }),
  }),
}

# FIXME make it a global main file argument or rather wait until some
#   URL API is available?
#load stream
#data = io.read('misc/server_openalt_org/forms/call_for_proposals_openalt_2015-5.csv')
#csv = parse_csv(data, '"')
#csv.iterate {
#  kind = X[42].convert($lower)
#  track = X[47].convert($lower)
#  _participants.append(
#    (Participant)(
#      name = X[9],
#      members = none,
#      photo = '',  # X[23]
#      trans = {
#        $cs -> (
#          role = X[16],
#          note = '',
#        )
#      },
#      events = {
#        (Event)(
#          kind = kind.match('(talk|přednáška)') != none ? Kind.talk :
#                 kind.match('(workshop|dílna)') != none ? Kind.workshop :
#                 Kind.internal,
#          # FIXME Dao bug: match() doesn't take into account spaces if there are UTF-8 characters
#          track = track.match('Otevřená společnost, komunity a data'.replace(' ', '.').convert($lower)) != none ? Track.track0 :
#                  track.match('Alternativy ve vzdělávání'           .replace(' ', '.').convert($lower)) != none ? Track.track1 :
#                  track.match('Bezpečnost a soukromí'               .replace(' ', '.').convert($lower)) != none ? Track.track2 :
#                  track.match('Hnutí Tvůrců %(Makers%)'             .replace(' ', '.').convert($lower)) != none ? Track.track3 :
#                  track.match('Otevřené mobilní technologie'        .replace(' ', '.').convert($lower)) != none ? Track.track4 :
#                  track.match('Otevřený software %(LinuxAlt%)'      .replace(' ', '.').convert($lower)) != none ? Track.track5 :
#                  Track.track6,
#          uri = (
#            video_rec = '',
#            presentation = '',
#            materials = '',
#          ),
#          from = time.now(),  # time.parse('0s'),  # FIXME
#          to   = time.now(),  # time.parse('0s'),  # FIXME
#          priority = 0,
#          trans = {
#            $cs -> (
#              name = X[43],
#              requirements = '',  #X[45],  # FIXME
#              description = X[44],
#              place = '',
#            ),
#          }
#        )
#      }
#    )
#  )
#
#  #io.writeln('name', X[9])
#  #io.writeln('pic', X[23])
#  #io.writeln('kind', X[42])
#  #io.writeln('talk_name', X[43])
#  #io.writeln('talk_desc', X[44])
#  #io.writeln('talk_req', X[48])  # FIXME these are just notes, not requirements
#  #io.writeln('track', X[47])
#}

load stream
# http://python-conflab.rhcloud.com/oa2015/export/m_app/
data = io.read('misc/schedule/2015/schedule.json')
load web.json
res = (map)json.parse(data)
#res['users'].iterate {
#res['sessions'].iterate {
#  io.writeln(X['track'])
#}
#os.exit()

invar offset = time.TimeSpan(years = 30, days = -1, hours = -1)

res['users'].append(
{
  "avatar" => (json.Data)"",
  "company" => "",
  "facebook" => "",
  "google_plus" => "",
  "joined" => "2015-10-12 21:29:48",
  "lastactive" => "",
  "linkedin" => "",
  "name" => "Unknown",
  "position" => "",
  "twitter" => "",
  "username" => "Unknown",
  "web" => "",
}
)

#res['users'].append({})
# FIXME this should have thrown a typing error with the missing (string) and (json.Data) casting
#((list)res['sessions']).append(
res['sessions'].append(
{
  "topic" => (json.Data)"Simulátor AeroWorks",
  "event_start" => (string)(int)(time.parse('2015-11-07 10:00') + offset).value,
  #"event_start_rfc" => "Sat, 07 Nov 2015 09:00:00 +0100",
  "event_end" => (string)(int)(time.parse('2015-11-07 17:00') + offset).value,
  #"event_end_rfc" => "Sat, 07 Nov 2015 09:30:00 +0100",
  #"lang" => "cz",
  "reqs" => "",
  "room_short" => "AeroWorks lab",
  #"room_color" => "#787878",
  #"session_id" => 9999,
  "speakers" => { "Unknown" },
  #"tags" => {  },
  "description" => '
Pro návštěvníky bude otevřen simulátor Boeingu 737 NG, který je vyvíjený výzkumnou skupinou <a href="https://twitter.com/Aeroworks_cz">AeroWorks</a>.
<br>
<br>Kapacita je omezena, při prohlídkách budou upřednostněni registrovaní účastníci konference.
',
  "track" => "Unknown",
  "type" => 'Doprovodné',
},
{
  "topic" => (json.Data)"Muzeum výpočetní techniky",
  "event_start" => (string)(int)(time.parse('2015-11-07 13:00') + offset).value,
  "event_end" => (string)(int)(time.parse('2015-11-07 15:00') + offset).value,
  "reqs" => "",
  "room_short" => "",
  "speakers" => { "Unknown" },
  "description" => '
Muzeum výpočetní techniky bude mimořádně otevřeno pro návštěvníky konference.
<br>
<br>V&nbsp;muzeu se nyní nachází téměř padesát různých počítačů, doplňuje je asi třicítka dobových periferních zařízení, kromě toho expozice zahrnují dalších asi 60 drobných exponátů. Nejstarším exponátem je mechanický kalkulátor z 50. let, nejnovějším pak počítač, vyrobený v roce 1991 v tehdejší ČSFR.
<br>
<br><a href="http://www.fit.vutbr.cz/FIT/museum/">Webová stránka</a>
',
  "track" => "Unknown",
  "type" => 'Doprovodné',
},
{
  "topic" => (json.Data)"LPI Certifikace",
  "event_start" => (string)(int)(time.parse('2015-11-07 09:00') + offset).value,
  "event_end" => (string)(int)(time.parse('2015-11-07 18:00') + offset).value,
  "reqs" => "",
  "room_short" => "",
  "speakers" => { "Unknown" },
  "description" => '
V&nbsp;rámci letošní konference si můžete také nechat otestovat vaše znalosti z oblasti Linuxu a získat tak jeden ze světově nejvíce uznávaných certifikátů od Linux Professional Institute. A to poprvé přímo v Brně!

<a href="https://lpievent.lpice.eu/">Registrace</a>, <a href="https://openalt.cz/2015/lpi.pdf">Propozice</a>
',
  "track" => "Unknown",
  "type" => 'Doprovodné',
},
{
  "topic" => (json.Data)"Robo@FIT laboratoř",
  "event_start" => (string)(int)(time.parse('2015-11-07 10:30') + offset).value,
  "event_end" => (string)(int)(time.parse('2015-11-07 11:30') + offset).value,
  "reqs" => "",
  "room_short" => "",
  "speakers" => { "Unknown" },
  "description" => '
Workshop | <a href="http://www.fit.vutbr.cz/FIT/map/fit1.php?show=O104">O104</a> | Sobota 10:30 - 11:30
<br>
<br>Workshop volně naváže na přednášku "ROS - operační systém pro roboty". Výzkumná skupina <a href="http://www.fit.vutbr.cz/research/groups/robo/.cs">Robo@FIT</a> představí své roboty a seznámí účastníky s oblastmi vývoje kterým se věnuje.
',
  "track" => "Unknown",
  "type" => 'Doprovodné',
},
{
  "topic" => (json.Data)"Sobotní párty Starý pivovar",
  "event_start" => (string)(int)(time.parse('2015-11-07 18:00') + offset).value,
  "event_end" => (string)(int)(time.parse('2015-11-08 02:00') + offset).value,
  "reqs" => "",
  "room_short" => "",
  "speakers" => { "Unknown" },
  "description" => '
FIT poskytl k dispozici prostory bývále restaurace Starý pivovar, která je součástí areálu fakulty.
<br>
<br>Na čepu bude naražené pivo a nějaká nealkoholická limonáda.
<br>
<br>Starý pivovar je označený na <a href="http://www.fit.vutbr.cz/FIT/map/fit1.php.cs?show=P108">mapě areálu</a> písmenem P.
',
  "track" => "Unknown",
  "type" => 'Doprovodné',
},
)

# FIXME Homeless - pridat Petr Hvižď a Marek Brychta

res['sessions'].iterate {
  kind = X['type'].convert($lower)
  # X['room_color']
  track = X['track'].convert($lower)
  from = time.fromValue((int)X['event_start']) - offset
  to   = time.fromValue((int)X['event_end']) - offset

  # it's a short (30 min) talk
  is_short = (to - from) < time.TimeSpan(hours = 1)
  # it start's in the middle of a full (60 min) block
  starts_from_middle = from.minute == 0
  # it's not the OpenAlt z.s. keynote, which starts in the middle, but has to be left scheduled like that
  not_oa_keynote = X['topic'].match('Keynote') == none
  priority = is_short && starts_from_middle && not_oa_keynote ? -1 : 0
#  priority = (
#      # FIXME Dao bug: without parentheses, boolean evaluation doesn't work
#      # it's a short (30 min) talk
#      ((to - from) < time.TimeSpan(hours = 1)) &&
#      # it start's in the middle of a full (60 min) block
#      (from.minute != 0) &&
#      # it's not the OpenAlt z.s. keynote, which starts in the middle, but has to be left scheduled like that
#      (X['topic'].match('Keynote') == none) ) ? -1 : 0

  user = res['users'].find { [a]
    # a['username']
    a['name'] in X['speakers']
  }.value

  _participants.append(
    (Participant)(
      name = user['name'],  #X['speakers'][0],
      # FIXME filter out the correctly indexed user, not the first one
      members = %X['speakers'] > 1 ? X['speakers'][1:] : none,
      photo = user['avatar'],
      web = user['web'],
      linkedin = user['linkedin'],
      facebook = user['facebook'],
      diaspora = '',
      twitter = user['twitter'],
      gplus = user['google_plus'],
      trans = {
        $cs -> (
          role = user['position'],
          organization = user['company'],
          note = '',
        )
      },
      events = {
        (Event)(
          kind = (kind.match('(additional|doprovodné)'       ) != none ||
                  X['topic'].convert($lower).match('robo@fit') != none) ? Kind.additional :
                 kind.match('(talk|přednáška)'               ) != none ? Kind.talk :
                 kind.match('(workshop|dílna)'               ) != none ? Kind.workshop :
                 Kind.internal,
          #track = track.match('{{#d4d1a3}}' .convert($lower)) != none ? Track.track0 :  # open SW
          #        track.match('{{#ecfe80}}' .convert($lower)) != none ? Track.track1 :  # open edu
          #        track.match('{{#e1b4cd}}' .convert($lower)) != none ? Track.track2 :  # makers, mobile, security
          #        track.match('{{#89f891}}' .convert($lower)) != none ? Track.track3 :  # * workshop 1
          #        track.match('{{#787878}}' .convert($lower)) != none ? Track.track4 :  # workshop 2
          #        track.match('{{#08be85}}' .convert($lower)) != none ? Track.track5 :  # lab of communication
          #        #track.match('{{#9aaaec}}' .convert($lower)) != none ? Track.track5 :
          #        Track.track6,  # cinema

          track = X['topic'].convert($lower).match('robo@fit'                           ) != none ? Track.track6 :
                  track.match('{{Otevřená společnost, komunity a data}}'.convert($lower)) != none ? Track.track0 :
                  track.match('{{Alternativy ve vzdělávání}}'           .convert($lower)) != none ? Track.track1 :
                  track.match('{{Bezpečnost a soukromí}}'               .convert($lower)) != none ? Track.track2 :
                  track.match('{{Hnutí Tvůrců (Makers)}}'               .convert($lower)) != none ? Track.track3 :
                  track.match('{{Otevřené mobilní technologie}}'        .convert($lower)) != none ? Track.track4 :
                  track.match('{{Otevřený software (LinuxAlt)}}'        .convert($lower)) != none ? Track.track5 :
                  Track.track6,  # cinema, etc.

          #track = track.match('({{Otevřený software (LinuxAlt)}}|{{Otevřená společnost, komunity a data}})'           .convert($lower)) != none ? Track.track0 :  # open SW
          #        track.match('{{Alternativy ve vzdělávání}}'                                                         .convert($lower)) != none ? Track.track1 :  # open edu
          #        track.match('({{Hnutí Tvůrců (Makers)}}|{{Otevřené mobilní technologie}}|{{Bezpečnost a soukromí}})'.convert($lower)) != none ? Track.track2 :  # makers, mobile, security
          #        kind.match('(workshop|dílna)')                                                                                        != none ? Track.track3 :  # workshop 1, workshop 2
          #        track.match('{{snthaoeusnthaou}}'                                                                   .convert($lower)) != none ? Track.track5 :  # lab of communication
          #        Track.track6,  # cinema
          uri = (
            video_rec = '',
            presentation = '',
            materials = '',
          ),
          from = priority == 0 ? from : from - TimeSpan(minutes = 30),
          to   = priority == 0 ? to : to - TimeSpan(minutes = 30),
          priority = priority,
          trans = {
            $cs -> (
              name = X['topic'],
              requirements = X['reqs'],
              description = X['description'],
              place = X['room_short'],
            ),
          }
        )
      }
    )
  )

  #io.writeln(X['topic'])
  #io.writeln((to - from) < time.TimeSpan(hours = 1))
  #io.writeln(from.minute != 0, '(', from.minute, ')')
  #io.writeln(X['topic'].match('Keynote') == none)
  #io.writeln(X['room_short'])
  #io.writeln(priority)
  #io.writeln(_participants[-1].events[0].from)
}

var participants: list<Participant> = {}

# remove duplicates
for (_p in _participants) {
  # FIXME (_, p) = ...
  p = participants.find { X.name == _p.name }
  if (p == none)
    participants.append(_p)
  else
    _p.events.iterate { p.value.events.append(X) }
}

## FIXME
#               load web.json
#               io.writeln(json.serialize(participants) {
#                 # (list<json.Data>)
#                 switch (X) type {
#                   #case tuple<a,b>: return {'a' => X.a, 'b' => X.b}
#                   case tuple:
#                     #m = (map<string, json.Data>){->}
#                     #m = (json.Data){->}
#                     m = (map<string, any>){->}
#                     for (i in X) {
#                       if (! (i[0] ?< string)) {
#                         io.writeln('XXX', i[0], 'XXX')
#                         std.error('^ is not a string')
#                       }
#                       m[i[0]] = i[1]
#                     }
#               #io.writeln('XXXX_map', m)
#               #io.writeln()
#                     return m
#                   #case Locale:
#                   case enum:
#                     return ((string)X)[1:]
#                   case time.DateTime:
#                     # ISO 8601 (2014-10-13T00:38:17+00:00)
#                     s = X.format('%Y-%m-%dT%H:%M:%S%:z')
#               #io.writeln('XXXX_datetime', s)
#                     #return X.format('%Y-%m-%dT%H:%M:%S%:z')
#                     return s
#                   default:
#                     s = 'UNKNOWN_TYPE'
#               #io.writeln('XXXX_unknowntype', s)
#                     return s
#                 }
#                 #return 0 # dummy return
#               })
