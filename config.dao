#!/usr/bin/env dao

load time
load os.fs

namespace configuration { conf, partners, curdir, check_path }

invar curdir = fs.dir('.').path

type Partner = tuple<
  enum<general, main>, name:string, img:string, uri:string
>

# all paths have to be full or non-relative URIs! Do not worry,
#   they'll be changed to relative ones in the end if needed.
invar conf = (
  time_from        = time.make(2015, 11, 7),
  time_to          = time.make(2015, 11, 8),
  time_show_sched  = time.make(2015, 9, 7 + 7),  # 1 week for CFP processing
  coord_gps_n      = '49.2263872',
  coord_gps_e      = '16.5963531',
  base_uri         = '',  # http://www.openalt.cz/
  # FIXME
  meta_description = 'A conference with talks and workshops devoted to ' +
    'openess (open-education, open-government, open-data, open-source, ' +
    'open-HW, open-SW, etc.).',
  meta_keywords    = 'conference,workshop,talk,brno' +
    ',open,open-education,open-government,open-data,open-source' +
    ',open-hardware,open-HW,open-software,open-SW',
  rootdir          = curdir,

  favicon196       = (mime='image/x-png', path=curdir + '/img/favicon196.png'),
  favicon180       = (mime='image/x-png', path=curdir + '/img/favicon180.png'),

  # look at uri-corresponding images below (if applicable)
  uri              = (
    # shared between all pages (no exceptions)
    css          = curdir + '/style.css',
    jquery1      = curdir + '/jquery.min.js',

    feed         = 'https://openalt.org/feed',
    diaspora     = 'https://diasp.eu/u/openalt',
    twitter      = 'https://twitter.com/hashtag/OA2015?src=hash',
    gplus        = 'https://plus.google.com/events/c1p8c1015tq2t6t2nunh1r5ort4',
    fb           = 'https://www.facebook.com/OpenAlt',

    #logo_oa_conf = 'http://www.openalt.org/spolek/logo_openalt_conference.svg',
    logo_oa_conf = 'https://files.openalt.org/index.php/s/MNWegoGbcbCHnpz/download',
    logo_oa_org  = 'https://files.openalt.org/index.php/s/mPPaAlakbgLnpPB/download',
    # FIXME URL
    #banner_print = 'http://www.openalt.org/spolek/OA_2014/OA_2014_tisk.pdf',
    # FIXME URL
    #banner_web   = 'http://www.openalt.org/spolek/OA_2014/OA_2014_banner.gif',
    reg_speaker  = 'https://www.openalt.org/2015/cfp-form',
    reg_visitor  = 'https://www.openalt.org/2015/registrace',
    reg_tip      = 'https://www.openalt.org/2015/cfp-tip',
    #cfp          = 'http://www.openalt.cz/2015/call-for-proposals.php',
    #cfp_form     = 'https://www.openalt.org/2015/cfp-form',
    # FIXME where is the QR code?
    #qr_oa_conf   = 'http://www.openalt.org/spolek/OA_2014/OpenAlt_2014_qr.svg',
    # FIXME where is the QR code?
    #qr_oa_org    = 'https://www.openalt.org/o-spolku/',
    #graph_man_oa_conf = 'http://www.openalt.org/spolek/oa_graficky_manual_konference.zip',
    graph_man_oa_conf = 'https://files.openalt.org/index.php/s/uwadpjMGSbqFyW3/download',
    graph_man_oa_org  = 'https://files.openalt.org/index.php/s/HXX1juMFK9LRz88/download',
  ),

  # FIXME use SVG everywhere!
  img              = (
    location     = curdir + '/img/map_fit_vutbr.jpg',
    logo_sufit   = curdir + '/img/logo-sufit.gif',
    audio        = curdir + '/img/icon-audio.svg',
    clock        = curdir + '/img/icon-clock.svg',
    door         = curdir + '/img/icon-door.svg',
    on_in_circle = curdir + '/img/icon-stream.svg',
    pdf          = curdir + '/img/icon-pdf.svg',
    video        = curdir + '/img/icon-video.svg',
    feed         = curdir + '/img/icon-feed.svg',

    diaspora     = curdir + '/img/icon-diaspora.svg',
    twitter      = curdir + '/img/icon-twitter.svg',
    gplus        = curdir + '/img/icon-gplus.svg',
    fb           = curdir + '/img/icon-facebook.svg',

    logo_oa_conf = curdir + '/img/logo-openalt-conference.svg',
    logo_oa_org  = curdir + '/img/logo-openalt-org.svg',
    banner_print = curdir + '/img/thumbnail-OA_2014_tisk.pdf.png',
    # FIXME URL
    #banner_web   = 'http://www.openalt.org/spolek/OA_2014/OA_2014_banner.gif',
    # FIXME URL
    #qr_oa_conf   = 'http://www.openalt.org/spolek/OA_2014/OpenAlt_2014_qr.svg',
    # FIXME URL
    #qr_oa_org    = 'http://www.openalt.org/o-spolku/',
    graph_man_oa_conf = curdir + '/img/thumbnail-oa_graficky_manual_konference.zip.png',
    graph_man_oa_org  = curdir + '/img/thumbnail-oa_graficky_manual.zip.png',
  ),
)

invar partners: list<Partner> = {
  # FIXME this should be built-in logic dependent on the least date of becoming a sponsor
  # multilanguage support is not necessary for this one
  ($general, 'Staňte se naším partnerem!',
   curdir + '/img/partners/logo_become_a_sponsor.png', 'http://openalt.cz/2015/cs/contact.html'),
  ($general, 'FIT VUT',
   curdir + '/img/partners/logo_fit.gif',              'http://www.fit.vutbr.cz/'),
  ($general, 'SU FIT VUT',
   curdir + '/img/partners/logo_su_fit.jpg',           'http://www.su.fit.vutbr.cz/'),
#  ($general, 'Red Hat',
#   curdir + '/img/partners/RHLogo.jpg',                'http://cz.redhat.com/'),
#  ($main, 'ABRA FlexiBee',
#   curdir + '/img/partners/logo-abraflexibee.jpg',     'http://www.flexibee.eu/'),
#  ($main, 'Honeywell',
#   curdir + '/img/partners/honeywell.png',             'http://honeywell.com/'),
#  ($main, 'ICT Pro s. r. o.',
#   curdir + '/img/partners/ict-pro.png',               'http://www.skoleni-ict.cz/'),
#  ($main, 'DataScript s. r. o.',
#   curdir + '/img/partners/logo_DataScript_cz.jpg',    'http://www.datascript.cz/'),
#  ($main, 'OKsystem',
#   curdir + '/img/partners/oksystem.png',              'http://www.oksystem.cz/'),
#  ($main, 'Perspektiva - ITJobs',
#   curdir + '/img/partners/perspektiva.png',           'http://www.perspektiva.eu/'),
#  ($main, 'Root.cz - linux, open source a free software',
#   curdir + '/img/partners/root.png',                  'http://www.root.cz/'),
#  ($main, 'skHosting.eu s. r. o.',
#   curdir + '/img/partners/skhosting_eu.png',          'https://skhosting.eu/'),
#  ($main, 'Toastmasters International',
#   curdir + '/img/partners/toastmasters.png',          'http://www.projevse.cz/'),
}

# blackbox testing...
# FIXME use for_local_existence in auto-generated content (participants...)
routine check_path(invar uri: none|string, for_local_existence = false) {
  if (uri == none or %uri <= 0) return

  if (for_local_existence) {
    #if (! fs.exists(uri))
    if (! fs.exists((string)uri))
      std.error('"' + uri + '" doesn\'t exist')
  }
  else {
    if (uri[0] != '/'[0] && uri.match('^[^:/]+') == none)
      std.error('"' + uri + '" is not a full path nor non-relative URI')
  }
}

check_path(conf.rootdir)
for (t in conf.uri) check_path(t[1])
for (fav in {conf.favicon196, conf.favicon180}) {
  check_path(fav.path)
  #if ('svg' in fav.mime) {
  #  if (conf.favicon.sizes != 'any')
  #    std.error('scalable favicons demand "any" in the `sizes\' attribute')
  #}
  #else {
  #  conf.favicon.sizes.split(' ').iterate {
  #    if (X.match('^[0-9]+x[0-9]+$') == none)
  #      std.error('bitmap favicons demand "NxM N2xM2 ..." in the `sizes\' attribute')
  #  }
  #}
}
for (t in conf.img) check_path(t[1])
for (p in partners) check_path(p.img)
