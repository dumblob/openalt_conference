#!/usr/bin/env dao

load time
load os.fs

namespace configuration { conf, partners, curdir, check_path }

invar curdir = fs.dir('.').path

type Partner = tuple<
  enum<general, main>, name:string, img:string, uri:string
>

# all paths have to be full or non-relative URIs! Do not worry,
#   they'll be changed to relative ones in the end if needed.
invar conf = (
  time_from = time.make(2014, 11, 1),
  time_to   = time.make(2014, 11, 2),
  coord_gps = '49.2263872°N, 16.5963531°E',
  # FIXME
  #base_uri  = 'http://www.openalt.cz/',
  base_uri  = '',
  # FIXME
  meta_description = 'some short human readable description in english of the content of the web page',
  rootdir   = curdir,
  uri       = (
    # shared between all pages (no exceptions)
    css       = curdir + '/style.css',
    twitter   = 'https://twitter.com/OpenAlt',
    gplus     = 'http://plus.google.com/100946575675112811528',
    fb        = 'https://www.facebook.com/OpenAlt',
  ),
  # mime='image/x-icon'
  favicon   = (mime='image/x-svg', path=curdir + '/img/favicon.svg',
               sizes='any'),
  img       = (
    # FIXME request from Michaela
    rss          = curdir + '/img/icon-rss.svg',
    twitter      = curdir + '/img/icon-twitter.svg',
    gplus        = curdir + '/img/icon-gplus.svg',
    fb           = curdir + '/img/icon-facebook.svg',
    location     = curdir + '/img/map_fit_vutbr.jpg',

    # FIXME use SVG everywhere!
    audio        = curdir + '/img/icon-audio.svg',
    clock        = curdir + '/img/icon-clock.svg',
    door         = curdir + '/img/icon-door.svg',
    on_in_circle = curdir + '/img/icon-stream.svg',
    pdf          = curdir + '/img/icon-pdf.svg',
    video        = curdir + '/img/icon-video.svg',
    logo_oa_conf = curdir + '/img/logo-openalt-conference.svg',
    logo_oa_org  = curdir + '/img/logo-openalt-org.svg',
    logo_sufit   = curdir + '/img/logo-sufit.gif',
  ),
)

invar partners: list<Partner> = {
  ($general, 'FIT VUT',
   curdir + '/img/partners/logo_fit.gif',           'http://www.fit.vutbr.cz/'),
  ($general, 'Red Hat',
   curdir + '/img/partners/RHLogo.jpg',             'http://cz.redhat.com/'),
  ($main, 'FlexiBee Systems',
   curdir + '/img/partners/flexibee.png',           'http://www.flexibee.eu/'),
  ($main, 'Honeywell',
   curdir + '/img/partners/honeywell.png',          'http://honeywell.com/'),
  ($main, 'ICT Pro s. r. o.',
   curdir + '/img/partners/ict-pro.png',            'http://www.skoleni-ict.cz/'),
  ($main, 'DataScript s. r. o.',
   curdir + '/img/partners/logo_DataScript_cz.jpg', 'http://www.datascript.cz/'),
  ($main, 'OKsystem',
   curdir + '/img/partners/oksystem.png',           'http://www.oksystem.cz/'),
  ($main, 'Perspektiva - ITJobs',
   curdir + '/img/partners/perspektiva.png',        'http://www.perspektiva.eu/'),
  ($main, 'Root.cz - linux, open source a free software',
   curdir + '/img/partners/root.png',               'http://www.root.cz/'),
  ($main, 'skHosting.eu s. r. o.',
   curdir + '/img/partners/skhosting_eu.png',       'https://skhosting.eu/'),
  ($main, 'Toastmasters International',
   curdir + '/img/partners/toastmasters.png',       'http://www.projevse.cz/'),
}

# blackbox testing...
# FIXME use for_local_existence in auto-generated content (participants...)
routine check_path(invar uri: string, for_local_existence = false) {
  if (for_local_existence) {
    if (! fs.exists(uri))
      std.error('"' + uri + '" doesn\'t exist')
  }
  else {
    if (uri[0] != '/'[0] && uri.match('^[^:/]+') == none)
      std.error('"' + uri + '" is not a full path nor non-relative URI')
  }
}

check_path(conf.rootdir)
for (t in conf.uri) check_path(t[1])
check_path(conf.favicon.path)
if ('svg' in conf.favicon.mime) {
  if (conf.favicon.sizes != 'any')
    std.error('scalable favicons demand "any" in the `sizes\' attribute')
}
else {
  conf.favicon.sizes.split(' ').iterate {
    if (X.match('^[0-9]+x[0-9]+$') == none)
      std.error('bitmap favicons demand "NxM N2xM2 ..." in the `sizes\' attribute')
  }
}
for (t in conf.img) check_path(t[1])
for (p in partners) check_path(p.img)
