#!/usr/bin/env dao

load time
load os.fs

namespace configuration { conf, partners, curdir, check_path }

invar curdir = fs.dir('.').path

type Partner = tuple<name:string, img:string, uri:string>

# all paths have to be full or non-relative URIs! Do not worry,
#   they'll be changed to relative ones in the end if needed.
invar conf = (
  time_from = time.make(2014, 11, 1),
  time_to   = time.make(2014, 11, 2),
  coord_gps = '49.2263872°N, 16.5963531°E',
  # FIXME how about detection of user's preference in browser (without JS)?
  # default language
  lang      = 'cs',
  # FIXME
  #base_uri  = 'https://www.some.domain.com/with/some/path/',
  base_uri  = '',
  # FIXME
  meta_description = 'some short human readable description in english of the content of the web page',
  rootdir   = curdir,
  uri       = (
    # shared between all pages (no exceptions)
    css       = curdir + '/style.css',
    rss       = 'https://rss',
    twitter   = 'https://twitter',
    fb        = 'https://facebook',
  ),
  # mime='image/x-icon'
  favicon   = (mime='image/x-svg', path=curdir + '/img/favicon.svg',
               sizes='any'),
  img       = (
    # FIXME request from Michaela
    rss          = curdir + '/img/icon-clock.png',
    twitter      = curdir + '/img/icon-clock.png',
    fb           = curdir + '/img/icon-clock.png',
    location     = curdir + '/img/map_fit_vutbr.jpg',

    # FIXME use SVG everywhere!
    audio        = curdir + '/img/icon-audio.png',
    clock        = curdir + '/img/icon-clock.png',
    door         = curdir + '/img/icon-door.png',
    on_in_circle = curdir + '/img/icon-on_in_circle.png',
    pdf          = curdir + '/img/icon-pdf.png',
    video        = curdir + '/img/icon-video.png',
    logo_big     = curdir + '/img/logo-openalt-conference-far-305px.png',
  ),
)

invar partners: list<Partner> = {
    ('', curdir + '/img/partners/partner00.png', 'http://some_nice_circle0.com/about'),
    ('', curdir + '/img/partners/partner00.png', 'http://some_nice_circle1.com/about'),
    ('', curdir + '/img/partners/partner00.png', 'http://some_nice_circle2.com/about'),
}

# blackbox testing...
routine check_path(invar uri: string) {
  if (uri[0] != '/'[0] && uri.match('^[^:/]+') == none)
    std.error('"' + uri + '" is not a full path nor non-relative URI')
}
check_path(conf.rootdir)
for (t in conf.uri) check_path(t[1])
check_path(conf.favicon.path)
if ('svg' in conf.favicon.mime) {
  if (conf.favicon.sizes != 'any')
    std.error('scalable favicons demand "any" in the `sizes\' attribute')
}
else {
  conf.favicon.sizes.split(' ').iterate {
    if (X.match('^[0-9]+x[0-9]+$') == none)
      std.error('bitmap favicons demand "NxM N2xM2 ..." in the `sizes\' attribute')
  }
}
for (t in conf.img) check_path(t[1])
for (p in partners) check_path(p.img)
